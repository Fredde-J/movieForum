[{"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\index.js":"1","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\App.js":"2","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\reportWebVitals.js":"3","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\Home.js":"4","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\ThreadPage.js":"5","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\PostsPage.js":"6","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\components\\Header.js":"7","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\LoginPage.js":"8","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\contexts\\UserContext.js":"9","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\AdminPage.js":"10"},{"size":245,"mtime":1608374179809,"results":"11","hashOfConfig":"12"},{"size":1159,"mtime":1610093824664,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1252,"mtime":1608559525376,"results":"15","hashOfConfig":"12"},{"size":6332,"mtime":1610106644349,"results":"16","hashOfConfig":"12"},{"size":2356,"mtime":1610030102573,"results":"17","hashOfConfig":"12"},{"size":1571,"mtime":1610094913906,"results":"18","hashOfConfig":"12"},{"size":4713,"mtime":1610116508361,"results":"19","hashOfConfig":"12"},{"size":718,"mtime":1610106799532,"results":"20","hashOfConfig":"12"},{"size":4817,"mtime":1610114139659,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"crpj8u",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\index.js",[],["46","47"],"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\App.js",[],"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\reportWebVitals.js",[],["48","49"],"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\Home.js",["50"],"import React, {useState,useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\n\r\nconst Home = () => {\r\n    const [categories, setCategories] = useState(null);\r\n    let history = useHistory()\r\n\r\n    const getCategories = async () =>{\r\n            let res = await fetch(`api/v1/categories`);\r\n            console.log(res)\r\n            try {\r\n              res = await res.json();\r\n              setCategories(res);\r\n            } catch(e) {\r\n              console.log(e)\r\n              console.error(\"Faild to fetch categories\");\r\n            }\r\n        }\r\n\r\n        const goToThreads = (category)=>{\r\n          console.log(category.id);\r\n          history.push(\"/threads/\"+category.id)\r\n        }\r\n\r\n        useEffect(() => {\r\n           getCategories()\r\n           console.log(categories)\r\n        }, [])\r\n         \r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          {categories&&\r\n          categories.map((category, i)=> {\r\n            return  <Button  key={i} onClick={()=>{goToThreads(category)}} block size=\"xl\" >{category.name}</Button>\r\n          })}\r\n         \r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default Home\r\n","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\ThreadPage.js",["51","52","53","54","55","56","57"],"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\PostsPage.js",["58","59"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\n\r\nconst PostPage = () => {\r\n  const [posts, setPosts] = useState(null);\r\n  const [answer, setAnswer] = useState(null);\r\n  const { user } = useContext(UserContext);\r\n  let { id } = useParams();\r\n\r\n  const getPosts = async () => {\r\n    let res = await fetch(`/api/v1/posts/getPostsByThreadId/` + id);\r\n    console.log(res);\r\n    try {\r\n      res = await res.json();\r\n      setPosts(res);\r\n    } catch (e) {\r\n      console.log(e);\r\n      console.error(\"Faild to fetch post\");\r\n    }\r\n  };\r\n\r\n  const postAnswer = async (e) => {\r\n    e.preventDefault();\r\n    let postBody = {\r\n      message: answer,\r\n      timestamp: Date.now(),\r\n      thread: posts[0].thread,\r\n      user: user,\r\n    };\r\n\r\n    let response = await fetch(\"/api/v1/posts\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(postBody),\r\n    });\r\n    if (response.status == 200) {\r\n      setAnswer(null);\r\n      getPosts();\r\n    } else {\r\n      console.error(await response.json());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {posts &&\r\n        posts.map((post, i) => {\r\n          return (\r\n            <Card className=\"mt-2\">\r\n              <CardBody>\r\n                <h5>{post.user.username}</h5>\r\n                <CardText> {post.message} </CardText>\r\n              </CardBody>\r\n            </Card>\r\n          );\r\n        })}\r\n      <Form onSubmit={postAnswer}>\r\n        <FormGroup>\r\n          {user ? (\r\n            <div>\r\n              <Label for=\"exampleText\">Svara här:</Label>\r\n              <Input\r\n                minLength=\"2\"\r\n                maxLength=\"1000\"\r\n                required\r\n                type=\"textarea\"\r\n                name=\"text\"\r\n                id=\"exampleText\"\r\n                onChange={(e) => setAnswer(e.target.value)}\r\n              />\r\n              <Button>Skicka</Button>\r\n            </div>\r\n          ) : (\r\n            <p>logga in för att svara</p>\r\n          )}\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default PostPage;\r\n","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\components\\Header.js",[],"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\LoginPage.js",[],"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\contexts\\UserContext.js",[],"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\AdminPage.js",["60","61","62","63","64","65","66","67","68","69","70","71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":34,"column":12,"nodeType":"81","endLine":34,"endColumn":14,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":79,"column":25,"nodeType":"85","messageId":"86","endLine":79,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":106,"column":40,"nodeType":"89","messageId":"90","endLine":106,"endColumn":42},{"ruleId":"83","severity":1,"message":"84","line":106,"column":50,"nodeType":"85","messageId":"86","endLine":106,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":106,"column":76,"nodeType":"89","messageId":"90","endLine":106,"endColumn":78},{"ruleId":"83","severity":1,"message":"84","line":136,"column":25,"nodeType":"85","messageId":"86","endLine":136,"endColumn":27},{"ruleId":"83","severity":1,"message":"84","line":145,"column":25,"nodeType":"85","messageId":"86","endLine":145,"endColumn":27},{"ruleId":"79","severity":1,"message":"91","line":154,"column":6,"nodeType":"81","endLine":154,"endColumn":8,"suggestions":"92"},{"ruleId":"83","severity":1,"message":"84","line":47,"column":25,"nodeType":"85","messageId":"86","endLine":47,"endColumn":27},{"ruleId":"79","severity":1,"message":"93","line":57,"column":6,"nodeType":"81","endLine":57,"endColumn":8,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":30},{"ruleId":"95","severity":1,"message":"99","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":21},{"ruleId":"95","severity":1,"message":"100","line":11,"column":3,"nodeType":"97","messageId":"98","endLine":11,"endColumn":7},{"ruleId":"95","severity":1,"message":"101","line":12,"column":3,"nodeType":"97","messageId":"98","endLine":12,"endColumn":12},{"ruleId":"95","severity":1,"message":"102","line":13,"column":3,"nodeType":"97","messageId":"98","endLine":13,"endColumn":8},{"ruleId":"95","severity":1,"message":"103","line":14,"column":3,"nodeType":"97","messageId":"98","endLine":14,"endColumn":8},{"ruleId":"95","severity":1,"message":"104","line":15,"column":3,"nodeType":"97","messageId":"98","endLine":15,"endColumn":6},{"ruleId":"95","severity":1,"message":"105","line":16,"column":3,"nodeType":"97","messageId":"98","endLine":16,"endColumn":6},{"ruleId":"83","severity":1,"message":"84","line":46,"column":25,"nodeType":"85","messageId":"86","endLine":46,"endColumn":27},{"ruleId":"83","severity":1,"message":"84","line":63,"column":31,"nodeType":"85","messageId":"86","endLine":63,"endColumn":33},{"ruleId":"83","severity":1,"message":"84","line":74,"column":31,"nodeType":"85","messageId":"86","endLine":74,"endColumn":33},{"ruleId":"83","severity":1,"message":"84","line":103,"column":25,"nodeType":"85","messageId":"86","endLine":103,"endColumn":27},{"ruleId":"79","severity":1,"message":"106","line":112,"column":6,"nodeType":"81","endLine":112,"endColumn":8,"suggestions":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array.","ArrayExpression",["110"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has a missing dependency: 'getThreads'. Either include it or remove the dependency array.",["111"],"React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["112"],"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'UserContext' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [categories]",{"range":"122","text":"123"},"Update the dependencies array to be: [getThreads]",{"range":"124","text":"125"},"Update the dependencies array to be: [getPosts]",{"range":"126","text":"127"},"Update the dependencies array to be: [users]",{"range":"128","text":"129"},[887,889],"[categories]",[3833,3835],"[getThreads]",[1350,1352],"[getPosts]",[2923,2925],"[users]"]