[{"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\index.js":"1","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\App.js":"2","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\reportWebVitals.js":"3","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\Home.js":"4","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\ThreadPage.js":"5","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\PostsPage.js":"6","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\components\\Header.js":"7","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\LoginPage.js":"8","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\contexts\\UserContext.js":"9"},{"size":245,"mtime":1608374179809,"results":"10","hashOfConfig":"11"},{"size":1035,"mtime":1609764477279,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1252,"mtime":1608559525376,"results":"14","hashOfConfig":"11"},{"size":6032,"mtime":1609944277040,"results":"15","hashOfConfig":"11"},{"size":2072,"mtime":1609844451815,"results":"16","hashOfConfig":"11"},{"size":1469,"mtime":1609930240967,"results":"17","hashOfConfig":"11"},{"size":4387,"mtime":1609770362559,"results":"18","hashOfConfig":"11"},{"size":744,"mtime":1609763268261,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"crpj8u",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\index.js",[],["42","43"],"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\App.js",[],"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\reportWebVitals.js",[],["44","45"],"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\Home.js",["46"],"import React, {useState,useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\n\r\nconst Home = () => {\r\n    const [categories, setCategories] = useState(null);\r\n    let history = useHistory()\r\n\r\n    const getCategories = async () =>{\r\n            let res = await fetch(`api/v1/categories`);\r\n            console.log(res)\r\n            try {\r\n              res = await res.json();\r\n              setCategories(res);\r\n            } catch(e) {\r\n              console.log(e)\r\n              console.error(\"Faild to fetch categories\");\r\n            }\r\n        }\r\n\r\n        const goToThreads = (category)=>{\r\n          console.log(category.id);\r\n          history.push(\"/threads/\"+category.id)\r\n        }\r\n\r\n        useEffect(() => {\r\n           getCategories()\r\n           console.log(categories)\r\n        }, [])\r\n         \r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          {categories&&\r\n          categories.map((category, i)=> {\r\n            return  <Button  key={i} onClick={()=>{goToThreads(category)}} block size=\"xl\" >{category.name}</Button>\r\n          })}\r\n         \r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default Home\r\n","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\ThreadPage.js",["47","48","49","50","51","52"],"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\PostsPage.js",["53","54","55"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n} from \"reactstrap\";\r\nimport {UserContext} from '../contexts/UserContext'\r\n\r\nconst PostPage = () => {\r\n  const [posts, setPosts] = useState(null);\r\n  const [answer, setAnswers] = useState(null);\r\n  const {user} = useContext(UserContext)\r\n  let { id } = useParams()\r\n\r\n  const getPosts = async () => {\r\n    let res = await fetch(`/api/v1/posts/getPostsByThreadId/` + id);\r\n    console.log(res);\r\n    try {\r\n      res = await res.json();\r\n      setPosts(res);\r\n    } catch (e) {\r\n      console.log(e);\r\n      console.error(\"Faild to fetch post\");\r\n    }\r\n  };\r\n\r\n  const postAnswer = async (e) => {\r\n    \r\n    let postBody = {\r\n      message: answer,\r\n      timestamp: Date.now(),\r\n      thread:  posts[0].thread\r\n    }\r\n\r\n    let response = await fetch(\"/api/v1/posts\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(postBody),\r\n    })\r\n\r\n    console.log(response)\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n    console.log(posts);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(answer);\r\n  }, [answer]);\r\n\r\n  return (\r\n    <div>\r\n      {posts &&\r\n        posts.map((post, i) => {\r\n          return (\r\n            <Card className=\"mt-2\">\r\n              <CardBody>\r\n                <CardText> {post.message} </CardText>\r\n              </CardBody>\r\n            </Card>\r\n          );\r\n        })}\r\n      <Form onSubmit={postAnswer}>\r\n        <FormGroup>\r\n          {user ? (\r\n          <div>\r\n          <Label for=\"exampleText\">Svara här:</Label>\r\n          <Input type=\"textarea\" name=\"text\" id=\"exampleText\" onChange={(e)=> setAnswers(e.target.value)} />\r\n          <Button>Skicka</Button>\r\n          </div>):(\r\n            <p>logga in för att svara</p>\r\n          )}\r\n        </FormGroup>\r\n        \r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default PostPage;\r\n","D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\components\\Header.js",[],"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\pages\\LoginPage.js",[],"D:\\skola\\movieForum\\src\\main\\resources\\static\\frontend\\src\\contexts\\UserContext.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"56","replacedBy":"60"},{"ruleId":"58","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":34,"column":12,"nodeType":"64","endLine":34,"endColumn":14,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":18,"column":3,"nodeType":"68","messageId":"69","endLine":18,"endColumn":11},{"ruleId":"66","severity":1,"message":"70","line":27,"column":17,"nodeType":"68","messageId":"69","endLine":27,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":80,"column":25,"nodeType":"73","messageId":"74","endLine":80,"endColumn":27},{"ruleId":"71","severity":1,"message":"72","line":133,"column":25,"nodeType":"73","messageId":"74","endLine":133,"endColumn":27},{"ruleId":"71","severity":1,"message":"72","line":142,"column":25,"nodeType":"73","messageId":"74","endLine":142,"endColumn":27},{"ruleId":"62","severity":1,"message":"75","line":151,"column":6,"nodeType":"64","endLine":151,"endColumn":8,"suggestions":"76"},{"ruleId":"66","severity":1,"message":"77","line":2,"column":21,"nodeType":"68","messageId":"69","endLine":2,"endColumn":31},{"ruleId":"66","severity":1,"message":"78","line":12,"column":3,"nodeType":"68","messageId":"69","endLine":12,"endColumn":11},{"ruleId":"62","severity":1,"message":"79","line":55,"column":6,"nodeType":"64","endLine":55,"endColumn":8,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array.","ArrayExpression",["83"],"no-unused-vars","'CardText' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getThreads'. Either include it or remove the dependency array.",["84"],"'useHistory' is defined but never used.","'FormText' is defined but never used.","React Hook useEffect has missing dependencies: 'getPosts' and 'posts'. Either include them or remove the dependency array.",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [categories]",{"range":"92","text":"93"},"Update the dependencies array to be: [getThreads]",{"range":"94","text":"95"},"Update the dependencies array to be: [getPosts, posts]",{"range":"96","text":"97"},[887,889],"[categories]",[3734,3736],"[getThreads]",[1241,1243],"[getPosts, posts]"]